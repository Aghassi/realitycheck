version: 2

workflows:
  version: 2
  resource_class_jobs:
    jobs:
      - small
      - medium
      - medium-plus
      - large
  contexts_job:
    jobs:
      context: org-global
  machine_jobs:
    jobs:
      - machine1
  feature_jobs:
    jobs:
      - write_workspace
      - use_workspace:
          requires:
            - write_workspace

resource-job-default: &resource-job-default
  docker:
    - image: circleci/ruby:2.4.1
  steps:
    - run: echo $CIRCLE_JOB 

machine: &machine
  machine: true
  steps:
    - run: |
        echo $SLEEP
        date
        sleep $SLEEP
        date
        echo 'Done sleeping.'

jobs:
  small:
    <<: *resource-job-default
    resource_class: small
  medium:
    <<: *resource-job-default
    resource_class: medium
  medium-plus:
    <<: *resource-job-default
    resource_class: medium+
  large:
    <<: *resource-job-default
    resource_class: large

  machine1:
    <<: *machine
    environment:
      SLEEP: 1

  contexts:
    docker:
      - image: alpine/latest
    working_directory: /a/contexts/test
    steps:
      - run:
          name: is our env var in here?
          command: `env | grep CONTEXTS_SERVICE_PROVIDED_ENV_VAR`

  write_workspace:
    docker:
      - image: circleci/node:latest
    working_directory: ~/foo/bar/
    steps:
      - run: mkdir stuff
      - run: echo 5 >./stuff/thing
      - persist_to_workspace:
          root: .
          paths:
            - stuff
  use_workspace:
    docker:
      - image: circleci/node:latest
    working_directory: ~/foo/bar/
    steps:
      - attach_workspace:
           at: ./attached
      - run: |
          if [[ $(< ./attached/stuff/thing) != '5' ]]; then
            echo 'Sadness, the value is not what we expected, so the workspace write/read did not work'
            exit 1
          else
            echo 'Yay, value matches'
            exit 0
          fi

